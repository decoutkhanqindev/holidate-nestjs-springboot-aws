// File: components/AuthModal.tsx (ƒê√É S·ª¨A L·ªñI KH√îNG T·∫ÆT POPUP)
'use client';

import { useAuth } from '@/contexts/AuthContext';
import { useState } from 'react';

export default function AuthModal() {
    // L·∫•y th√™m h√†m `closeModal` tr·ª±c ti·∫øp t·ª´ context
    const { isModalOpen, closeModal, login } = useAuth();
    const [view, setView] = useState('social');

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');

    const handleEmailLogin = (e: React.FormEvent) => {
        e.preventDefault();

        if (email === 'user@booking.com' && password === 'user123') {
            // 1. G·ªçi h√†m login ƒë·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i ng∆∞·ªùi d√πng
            login({ name: 'Phu Quoc', points: 0 });

            // 2. C·∫¨P NH·∫¨T QUAN TR·ªåNG: G·ªçi tr·ª±c ti·∫øp h√†m closeModal() ƒë·ªÉ ƒë√≥ng popup
            // ƒê√¢y l√† d√≤ng code s·ª≠a l·ªói!
            closeModal();

            // Reset form sau khi ƒëƒÉng nh·∫≠p
            setEmail('');
            setPassword('');
        } else {
            // B·ªè alert ƒë·ªÉ tr·∫£i nghi·ªám m∆∞·ª£t h∆°n, thay b·∫±ng log ho·∫∑c th√¥ng b√°o l·ªói tinh t·∫ø h∆°n
            alert('Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng. Vui l√≤ng th·ª≠ l·∫°i.');
        }
    };

    const handleRegister = (e: React.FormEvent) => {
        e.preventDefault();
        alert('ƒêƒÉng k√Ω th√†nh c√¥ng (DEMO)! Vui l√≤ng ƒëƒÉng nh·∫≠p.');
        setView('emailLogin');
    };

    // ----- PH·∫¶N B√äN D∆Ø·ªöI GI·ªÆ NGUY√äN, KH√îNG THAY ƒê·ªîI -----

    const renderContent = () => {
        if (view === 'emailLogin') {
            return (
                <form onSubmit={handleEmailLogin}>
                    <h4 className="fw-bold mb-4">ƒêƒÉng nh·∫≠p</h4>
                    <div className="mb-3">
                        <label htmlFor="emailLogin" className="form-label">Email</label>
                        <input
                            type="email"
                            id="emailLogin"
                            className="form-control form-control-lg"
                            placeholder="user@booking.com"
                            required
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                        />
                    </div>
                    <div className="mb-4">
                        <label htmlFor="passwordLogin" className="form-label">M·∫≠t kh·∫©u</label>
                        <input
                            type="password"
                            id="passwordLogin"
                            className="form-control form-control-lg"
                            placeholder="user123"
                            required
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                        />
                    </div>
                    <button type="submit" className="btn btn-primary btn-lg w-100">ƒêƒÉng nh·∫≠p</button>
                    <p className="text-center mt-3">
                        Ch∆∞a c√≥ t√†i kho·∫£n? <a href="#" onClick={(e) => { e.preventDefault(); setView('emailRegister'); }} className="fw-bold text-decoration-none">ƒêƒÉng k√Ω</a>
                    </p>
                </form>
            );
        }

        if (view === 'emailRegister') {
            return (
                <form onSubmit={handleRegister}>
                    <h4 className="fw-bold mb-4">ƒêƒÉng k√Ω</h4>
                    <div className="mb-3">
                        <label htmlFor="emailRegister" className="form-label">Email</label>
                        <input type="email" id="emailRegister" className="form-control form-control-lg" placeholder="your@email.com" required />
                    </div>
                    <div className="mb-4">
                        <label htmlFor="passwordRegister" className="form-label">M·∫≠t kh·∫©u</label>
                        <input type="password" id="passwordRegister" className="form-control form-control-lg" placeholder="********" required />
                    </div>
                    <button type="submit" className="btn btn-primary btn-lg w-100">ƒêƒÉng k√Ω</button>
                    <p className="text-center mt-3">
                        ƒê√£ c√≥ t√†i kho·∫£n? <a href="#" onClick={(e) => { e.preventDefault(); setView('emailLogin'); }} className="fw-bold text-decoration-none">ƒêƒÉng nh·∫≠p</a>
                    </p>
                </form>
            );
        }

        return (
            <>
                <div className="text-center mb-4">
                    <div className="p-3 bg-light rounded-3 d-inline-block">
                        <span style={{ fontSize: '40px' }}>üéüÔ∏è</span>
                    </div>
                    <h4 className="fw-bold mt-3">Ch√∫ng t√¥i c√≥ m·ªôt ∆∞u ƒë√£i v√¥ c√πng h·∫•p d·∫´n!</h4>
                </div>
                <div className="d-grid gap-3">
                    <button className="btn btn-lg btn-outline-dark d-flex align-items-center justify-content-center">Ô£ø<span className="ms-2">Apple</span></button>
                    <button className="btn btn-lg btn-outline-dark d-flex align-items-center justify-content-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" className="bi bi-google" viewBox="0 0 16 16"><path d="M15.545 6.558a9.42 9.42 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.689 7.689 0 0 1 5.352 2.082l-2.284 2.284A4.347 4.347 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.792 4.792 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.702 3.702 0 0 0 1.599-2.431H8v-3.08h7.545z" /></svg>
                        <span className="ms-2">Google</span>
                    </button>
                    <a href="#" onClick={(e) => { e.preventDefault(); setView('emailLogin'); }} className="text-center text-primary fw-bold text-decoration-none mt-2">C√°c l·ª±a ch·ªçn kh√°c</a>
                </div>
                <hr />
                <p className="text-center text-muted small">
                    B·∫±ng c√°ch ti·∫øp t·ª•c, b·∫°n ƒë·ªìng √Ω v·ªõi <a href="#">ƒêi·ªÅu kho·∫£n v√† ƒêi·ªÅu ki·ªán</a> v√† <a href="#">Ch√≠nh s√°ch b·∫£o v·ªá d·ªØ li·ªáu</a> c·ªßa ch√∫ng t√¥i.
                </p>
                <button onClick={closeModal} className="btn btn-link text-decoration-none w-100 mt-2">
                    T√¨m ki·∫øm v·ªõi t∆∞ c√°ch l√† kh√°ch
                </button>
            </>
        );
    };

    if (!isModalOpen) return null;

    return (
        <div className="modal fade show" style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.5)' }} onClick={closeModal}>
            <div className="modal-dialog modal-dialog-centered" onClick={(e) => e.stopPropagation()}>
                <div className="modal-content p-4 rounded-4">
                    <div className="modal-header border-0">
                        <button type="button" className="btn-close" onClick={closeModal}></button>
                    </div>
                    <div className="modal-body">
                        {renderContent()}
                    </div>
                </div>
            </div>
        </div>
    );
}